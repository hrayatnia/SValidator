{"includedArchiveIdentifiers":["SValidator"],"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/svalidator\/gettingstarted","title":"How to Start","type":"article"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/svalidator\/validator\/input","title":"Input","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/svalidator\/validator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/svalidator\/validator\/isvalid(_:)","title":"func isValid(Self.Input) -> Bool","type":"method"},{"path":"\/documentation\/svalidator\/validator\/validate(_:)","title":"func validate(Self.Input) throws","type":"method"},{"path":"\/documentation\/svalidator\/validator\/validatewithresult(_:)","title":"func validateWithResult(Self.Input) -> Result<Self.Input, any Error>","type":"method"}],"path":"\/documentation\/svalidator\/validator","title":"Validator","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/svalidator\/validate\/init(wrappedvalue:_:option:)","title":"init(wrappedValue: Input, (() -> [any Validator<Input>]), option: ValidationOption)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/svalidator\/validate\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/svalidator\/validate\/projectedvalue","title":"var projectedValue: Validate<Input>","type":"property"},{"path":"\/documentation\/svalidator\/validate\/validationerror","title":"var validationError: (any Error)?","type":"property"},{"path":"\/documentation\/svalidator\/validate\/wrappedvalue","title":"var wrappedValue: Input","type":"property"}],"path":"\/documentation\/svalidator\/validate","title":"Validate","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/svalidator\/validatorbuilder\/buildblock(_:)","title":"static func buildBlock((any Validator<Input>)...) -> [any Validator<Input>]","type":"method"}],"path":"\/documentation\/svalidator\/validatorbuilder","title":"ValidatorBuilder","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/svalidator\/validationoption\/always","title":"case always","type":"case"},{"path":"\/documentation\/svalidator\/validationoption\/onget","title":"case onGet","type":"case"},{"path":"\/documentation\/svalidator\/validationoption\/onset","title":"case onSet","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/svalidator\/validationoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/svalidator\/validationoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/svalidator\/validationoption","title":"ValidationOption","type":"enum"}],"path":"\/documentation\/svalidator","title":"SValidator","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}