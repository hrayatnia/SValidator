{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SValidator\/documentation\/SValidator\/GettingStarted"},"metadata":{"role":"article","modules":[{"name":"SValidator"}],"title":"How to Start","roleHeading":"Article"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/svalidator\/gettingstarted"]}],"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/SValidator\/documentation\/SValidator"]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Installation","anchor":"Installation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use SValidator in your project, add the following dependency to your "},{"type":"codeVoice","code":"Package.swift"},{"text":":","type":"text"}]},{"type":"codeListing","code":[".package(url: \"https:\/\/github.com\/hrayatnia\/SValidator.git\", from: \"1.0.0\")"],"syntax":"swift"},{"type":"heading","text":"Usage","anchor":"Usage","level":2},{"level":3,"type":"heading","text":"Using @Validate","anchor":"Using-Validate"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate"},{"type":"text","text":" property wrapper allows defining validation rules inline:"}]},{"syntax":"swift","code":["struct User {","    @Validate({","        LengthValidator(min: 5, max: 10)","        RegexValidator(pattern: \"^[a-zA-Z]+$\")","    })","    var username: String = \"JohnDoe\"","}"],"type":"codeListing"},{"text":"Implementing a Custom Validator","type":"heading","level":3,"anchor":"Implementing-a-Custom-Validator"},{"inlineContent":[{"type":"text","text":"To define a custom validator, conform to the "},{"type":"codeVoice","code":"Validator"},{"text":" protocol:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct EmailValidator: Validator {","    func validate(_ value: String) throws {","        if !value.contains(\"@\") {","            throw ValidationError.invalidEmail","        }","    }","}"]},{"level":3,"text":"Using `ValidatorBuilder`","anchor":"Using-ValidatorBuilder","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ValidatorBuilder","type":"codeVoice"},{"text":" enables grouping multiple validators concisely:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let validators = ValidatorBuilder<String> {","    EmailValidator()","    LengthValidator(min: 5, max: 50)","}"]},{"type":"heading","level":2,"anchor":"Validation-Checks","text":"Validation Checks"},{"inlineContent":[{"text":"You can check validation states dynamically:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["if $username.isValid {","    print(\"Valid username\")","} else if let error = $username.validationError {","    print(\"Validation error: \\(error)\")","}"]},{"anchor":"Contributing","text":"Contributing","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Contributions are welcome! Feel free to submit issues or pull requests."}]},{"text":"License","type":"heading","level":2,"anchor":"License"},{"type":"paragraph","inlineContent":[{"text":"MIT License. See ","type":"text"},{"code":"LICENSE","type":"codeVoice"},{"text":" file for details.","type":"text"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://SValidator/documentation/SValidator":{"kind":"symbol","role":"collection","url":"\/documentation\/svalidator","type":"topic","identifier":"doc:\/\/SValidator\/documentation\/SValidator","abstract":[],"title":"SValidator"},"doc://SValidator/documentation/SValidator/Validate":{"abstract":[{"text":"A property wrapper that applies validation logic to a property using a set of ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" objects.","type":"text"}],"url":"\/documentation\/svalidator\/validate","identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Validate"}],"title":"Validate","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validate"}]}}}