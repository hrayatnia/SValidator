{"metadata":{"roleHeading":"Article","title":"How to Start","modules":[{"name":"SValidator"}],"role":"article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SValidator\/documentation\/SValidator\/GettingStarted"},"sections":[],"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Installation","text":"Installation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use SValidator in your project, add the following dependency to your "},{"code":"Package.swift","type":"codeVoice"},{"text":":","type":"text"}]},{"syntax":"swift","code":[".package(url: \"https:\/\/github.com\/hrayatnia\/SValidator.git\", from: \"1.0.0\")"],"type":"codeListing"},{"text":"Usage","type":"heading","anchor":"Usage","level":2},{"anchor":"Using-Validate","type":"heading","level":3,"text":"Using @Validate"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","type":"reference"},{"text":" property wrapper allows defining validation rules inline:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct User {","    @Validate({","        LengthValidator(min: 5, max: 10)","        RegexValidator(pattern: \"^[a-zA-Z]+$\")","    })","    var username: String = \"JohnDoe\"","}"],"type":"codeListing"},{"level":3,"anchor":"Implementing-a-Custom-Validator","text":"Implementing a Custom Validator","type":"heading"},{"inlineContent":[{"text":"To define a custom validator, conform to the ","type":"text"},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" protocol:"}],"type":"paragraph"},{"syntax":"swift","code":["struct EmailValidator: Validator {","    func validate(_ value: String) throws {","        if !value.contains(\"@\") {","            throw ValidationError.invalidEmail","        }","    }","}"],"type":"codeListing"},{"anchor":"Using-ValidatorBuilder","type":"heading","text":"Using `ValidatorBuilder`","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"ValidatorBuilder","type":"codeVoice"},{"type":"text","text":" enables grouping multiple validators concisely:"}]},{"type":"codeListing","syntax":"swift","code":["let validators = ValidatorBuilder<String> {","    EmailValidator()","    LengthValidator(min: 5, max: 50)","}"]},{"level":2,"type":"heading","text":"Validation Checks","anchor":"Validation-Checks"},{"inlineContent":[{"type":"text","text":"You can check validation states dynamically:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["if $username.isValid {","    print(\"Valid username\")","} else if let error = $username.validationError {","    print(\"Validation error: \\(error)\")","}"]},{"text":"Contributing","type":"heading","anchor":"Contributing","level":2},{"inlineContent":[{"type":"text","text":"Contributions are welcome! Feel free to submit issues or pull requests."}],"type":"paragraph"},{"anchor":"License","level":2,"text":"License","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"MIT License. See "},{"code":"LICENSE","type":"codeVoice"},{"text":" file for details.","type":"text"}]}],"kind":"content"}],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/SValidator\/documentation\/SValidator"]]},"variants":[{"paths":["\/documentation\/svalidator\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SValidator/documentation/SValidator":{"role":"collection","type":"topic","kind":"symbol","abstract":[],"title":"SValidator","identifier":"doc:\/\/SValidator\/documentation\/SValidator","url":"\/documentation\/svalidator"},"doc://SValidator/documentation/SValidator/Validate":{"title":"Validate","role":"symbol","url":"\/documentation\/svalidator\/validate","identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validate"}],"abstract":[{"type":"text","text":"A property wrapper that applies validation logic to a property using a set of "},{"type":"codeVoice","code":"Validator"},{"text":" objects.","type":"text"}],"navigatorTitle":[{"text":"Validate","kind":"identifier"}]}}}