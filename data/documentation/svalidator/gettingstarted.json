{"primaryContentSections":[{"content":[{"text":"Installation","type":"heading","level":2,"anchor":"Installation"},{"inlineContent":[{"text":"To use SValidator in your project, add the following dependency to your ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":[".package(url: \"https:\/\/github.com\/hrayatnia\/SValidator.git\", from: \"1.0.0\")"]},{"type":"heading","level":2,"anchor":"Usage","text":"Usage"},{"level":3,"text":"Using @Validate","anchor":"Using-Validate","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","isActive":true},{"type":"text","text":" property wrapper allows defining validation rules inline:"}]},{"code":["struct User {","    @Validate({","        LengthValidator(min: 5, max: 10)","        RegexValidator(pattern: \"^[a-zA-Z]+$\")","    })","    var username: String = \"JohnDoe\"","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":3,"anchor":"Implementing-a-Custom-Validator","text":"Implementing a Custom Validator"},{"type":"paragraph","inlineContent":[{"text":"To define a custom validator, conform to the ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" protocol:","type":"text"}]},{"type":"codeListing","code":["struct EmailValidator: Validator {","    func validate(_ value: String) throws {","        if !value.contains(\"@\") {","            throw ValidationError.invalidEmail","        }","    }","}"],"syntax":"swift"},{"type":"heading","anchor":"Using-ValidatorBuilder","level":3,"text":"Using `ValidatorBuilder`"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"ValidatorBuilder","type":"codeVoice"},{"type":"text","text":" enables grouping multiple validators concisely:"}],"type":"paragraph"},{"syntax":"swift","code":["let validators = ValidatorBuilder<String> {","    EmailValidator()","    LengthValidator(min: 5, max: 50)","}"],"type":"codeListing"},{"level":2,"anchor":"Validation-Checks","type":"heading","text":"Validation Checks"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can check validation states dynamically:"}]},{"code":["if $username.isValid {","    print(\"Valid username\")","} else if let error = $username.validationError {","    print(\"Validation error: \\(error)\")","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Contributing","text":"Contributing","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Contributions are welcome! Feel free to submit issues or pull requests."}]},{"type":"heading","anchor":"License","level":2,"text":"License"},{"type":"paragraph","inlineContent":[{"type":"text","text":"MIT License. See "},{"code":"LICENSE","type":"codeVoice"},{"type":"text","text":" file for details."}]}],"kind":"content"}],"metadata":{"modules":[{"name":"SValidator"}],"title":"How to Start","role":"article","roleHeading":"Article"},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/SValidator\/documentation\/SValidator"]]},"variants":[{"paths":["\/documentation\/svalidator\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SValidator\/documentation\/SValidator\/GettingStarted","interfaceLanguage":"swift"},"sections":[],"references":{"doc://SValidator/documentation/SValidator":{"kind":"symbol","title":"SValidator","url":"\/documentation\/svalidator","abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/SValidator\/documentation\/SValidator"},"doc://SValidator/documentation/SValidator/Validate":{"kind":"symbol","identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","title":"Validate","type":"topic","navigatorTitle":[{"text":"Validate","kind":"identifier"}],"url":"\/documentation\/svalidator\/validate","abstract":[{"type":"text","text":"A property wrapper that applies validation logic to a property using a set of "},{"type":"codeVoice","code":"Validator"},{"text":" objects.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Validate"}],"role":"symbol"}}}