{"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"text":"Installation","type":"heading","anchor":"Installation","level":2},{"inlineContent":[{"type":"text","text":"To use SValidator in your project, add the following dependency to your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":[".package(url: \"https:\/\/github.com\/hrayatnia\/SValidator.git\", from: \"1.0.0\")"]},{"level":2,"anchor":"Usage","type":"heading","text":"Usage"},{"type":"heading","level":3,"text":"Using @Validate","anchor":"Using-Validate"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","isActive":true},{"type":"text","text":" property wrapper allows defining validation rules inline:"}],"type":"paragraph"},{"code":["struct User {","    @Validate({","        LengthValidator(min: 5, max: 10)","        RegexValidator(pattern: \"^[a-zA-Z]+$\")","    })","    var username: String = \"JohnDoe\"","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Implementing-a-Custom-Validator","text":"Implementing a Custom Validator","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"To define a custom validator, conform to the ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" protocol:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct EmailValidator: Validator {","    func validate(_ value: String) throws {","        if !value.contains(\"@\") {","            throw ValidationError.invalidEmail","        }","    }","}"]},{"anchor":"Using-ValidatorBuilder","text":"Using `ValidatorBuilder`","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"ValidatorBuilder"},{"text":" enables grouping multiple validators concisely:","type":"text"}]},{"code":["let validators = ValidatorBuilder<String> {","    EmailValidator()","    LengthValidator(min: 5, max: 50)","}"],"type":"codeListing","syntax":"swift"},{"text":"Validation Checks","level":2,"anchor":"Validation-Checks","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You can check validation states dynamically:","type":"text"}]},{"code":["if $username.isValid {","    print(\"Valid username\")","} else if let error = $username.validationError {","    print(\"Validation error: \\(error)\")","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Contributing","anchor":"Contributing"},{"inlineContent":[{"type":"text","text":"Contributions are welcome! Feel free to submit issues or pull requests."}],"type":"paragraph"},{"level":2,"text":"License","type":"heading","anchor":"License"},{"type":"paragraph","inlineContent":[{"text":"MIT License. See ","type":"text"},{"code":"LICENSE","type":"codeVoice"},{"type":"text","text":" file for details."}]}]}],"metadata":{"title":"How to Start","role":"article","modules":[{"name":"SValidator"}],"roleHeading":"Article"},"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/SValidator\/documentation\/SValidator"]]},"identifier":{"url":"doc:\/\/SValidator\/documentation\/SValidator\/GettingStarted","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/svalidator\/gettingstarted"]}],"references":{"doc://SValidator/documentation/SValidator":{"title":"SValidator","type":"topic","url":"\/documentation\/svalidator","identifier":"doc:\/\/SValidator\/documentation\/SValidator","abstract":[],"role":"collection","kind":"symbol"},"doc://SValidator/documentation/SValidator/Validate":{"title":"Validate","type":"topic","url":"\/documentation\/svalidator\/validate","navigatorTitle":[{"text":"Validate","kind":"identifier"}],"identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","abstract":[{"text":"A property wrapper that applies validation logic to a property using a set of ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" objects.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validate","kind":"identifier"}],"kind":"symbol"}}}