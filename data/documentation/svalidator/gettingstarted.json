{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"modules":[{"name":"SValidator"}],"title":"How to Start","roleHeading":"Article","role":"article"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Installation","type":"heading","text":"Installation","level":2},{"inlineContent":[{"type":"text","text":"To use SValidator in your project, add the following dependency to your "},{"type":"codeVoice","code":"Package.swift"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":[".package(url: \"https:\/\/github.com\/hrayatnia\/SValidator.git\", from: \"1.0.0\")"]},{"anchor":"Usage","text":"Usage","level":2,"type":"heading"},{"level":3,"type":"heading","text":"Using @Validate","anchor":"Using-Validate"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","type":"reference","isActive":true},{"text":" property wrapper allows defining validation rules inline:","type":"text"}]},{"code":["struct User {","    @Validate({","        LengthValidator(min: 5, max: 10)","        RegexValidator(pattern: \"^[a-zA-Z]+$\")","    })","    var username: String = \"JohnDoe\"","}"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Implementing a Custom Validator","type":"heading","anchor":"Implementing-a-Custom-Validator"},{"type":"paragraph","inlineContent":[{"text":"To define a custom validator, conform to the ","type":"text"},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" protocol:"}]},{"type":"codeListing","syntax":"swift","code":["struct EmailValidator: Validator {","    func validate(_ value: String) throws {","        if !value.contains(\"@\") {","            throw ValidationError.invalidEmail","        }","    }","}"]},{"level":3,"text":"Using `ValidatorBuilder`","anchor":"Using-ValidatorBuilder","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"ValidatorBuilder"},{"type":"text","text":" enables grouping multiple validators concisely:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let validators = ValidatorBuilder<String> {","    EmailValidator()","    LengthValidator(min: 5, max: 50)","}"]},{"anchor":"Validation-Checks","level":2,"text":"Validation Checks","type":"heading"},{"inlineContent":[{"text":"You can check validation states dynamically:","type":"text"}],"type":"paragraph"},{"code":["if $username.isValid {","    print(\"Valid username\")","} else if let error = $username.validationError {","    print(\"Validation error: \\(error)\")","}"],"syntax":"swift","type":"codeListing"},{"level":2,"anchor":"Contributing","text":"Contributing","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Contributions are welcome! Feel free to submit issues or pull requests.","type":"text"}]},{"type":"heading","text":"License","anchor":"License","level":2},{"inlineContent":[{"type":"text","text":"MIT License. See "},{"code":"LICENSE","type":"codeVoice"},{"text":" file for details.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/SValidator\/documentation\/SValidator"]]},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/svalidator\/gettingstarted"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SValidator\/documentation\/SValidator\/GettingStarted"},"references":{"doc://SValidator/documentation/SValidator":{"identifier":"doc:\/\/SValidator\/documentation\/SValidator","role":"collection","abstract":[],"type":"topic","url":"\/documentation\/svalidator","title":"SValidator","kind":"symbol"},"doc://SValidator/documentation/SValidator/Validate":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validate"}],"identifier":"doc:\/\/SValidator\/documentation\/SValidator\/Validate","title":"Validate","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Validate"}],"kind":"symbol","abstract":[{"text":"A property wrapper that applies validation logic to a property using a set of ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" objects.","type":"text"}],"url":"\/documentation\/svalidator\/validate"}}}